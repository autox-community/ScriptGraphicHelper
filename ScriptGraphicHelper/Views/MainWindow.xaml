<!-- 
代码关键点解析:

<Window
控件的类型,编译后大概率是 c# 中的 new Window()

xmlns="https://github.com/avaloniaui"
avalonia 的 xaml 标志,通过这个才能让编译器知道这个文件是 avalonia 的

x:Class="ScriptGraphicHelper.Views.MainWindow"
与这个 xaml 关联的 c# 代码 (命名空间和类名), xaml 编译器会将两者进行关联

xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
导入 微软xaml元数据和指令为 x,  xaml 中用 x 开头的属性和指令都是这个里面的内容,
比如 x:Name x:Class x:Static

xmlns:Panels="clr-namespace:ScriptGraphicHelper.Panels;assembly=ScriptGraphicHelper"
xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
导入第三方的 dll,并设置别名,在内容中可以用这个别名来调用里面的代码,
同一个程序集可以省略 "assembly="

xmlns:i="using:Avalonia.Xaml.Interactivity"
clr-namespace 导入本程序集代码 的简写版 (只能用来导入本程序集的类)

xmlns:alias="definition"
定义命名空间, 可以通过 clr-namespace 在别的地方引用

xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"	
mc:Ignorable="d"
d:DesignHeight="30"
d:DesignWidth="500"
这个值指示 XAML 解析器（无论是在设计时还是运行时），可以安全地​​忽略​​所有以 d:前缀开头的属性或元素。
如果解析器无法理解或处理这些带 d:前缀的内容，它不会抛出错误
-->
<Window
    xmlns="https://github.com/avaloniaui" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	
	mc:Ignorable="d"
	
    x:Class="ScriptGraphicHelper.Views.MainWindow"
	
	xmlns:Panels="clr-namespace:ScriptGraphicHelper.Panels;assembly=ScriptGraphicHelper"
    xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
    xmlns:i="using:Avalonia.Xaml.Interactivity"
    xmlns:vm="using:ScriptGraphicHelper.ViewModels"
    
	Title="综合图色助手"
    Width="{Binding WindowWidth, Mode=TwoWay}"
    Height="{Binding WindowHeight, Mode=TwoWay}"
    Cursor="{Binding WindowCursor, Mode=TwoWay}"
    CanResize="True"
    DragDrop.AllowDrop="True"
    FontSize="14"
    FontStyle="Normal"
    Icon="/assets/ico.ico"
    WindowStartupLocation="CenterScreen"
	
    KeyDown="Window_KeyDown"
	Opened="Window_Opened"
    Closing="Window_Closing"
    >
	<!--
	    告诉 IDE 这个 xaml 绑定的 ViewModel 是哪个,可以让 IDE 更智能的分析代码 和 预览界面,
		不参与运行时,
	    运行时 ViewModel 需要在 c# 代码中 new(), 
		比如 这个 xaml 是在 App.xaml.cs 实例化  MainWindow 后指定的 ViewModel
		desktop.MainWindow = new MainWindow
        {
            DataContext = new MainWindowViewModel(),
        };
	-->
	<Design.DataContext>
		<vm:MainWindowViewModel />
	</Design.DataContext>
	
	<!--快捷键-->
    <Window.KeyBindings>
        
		<!--A键 列表添加颜色-->
		<KeyBinding
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="A"
            Gesture="A" />
		
		<!--S键 列表添加颜色-->
		<KeyBinding
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="S"
            Gesture="S" />

		<!--D键 列表添加颜色-->
		<KeyBinding
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="D"
            Gesture="D" />
		
		<!--F1键 清空颜色列表-->
        <KeyBinding Command="{Binding Key_ColorInfo_Clear}" Gesture="F1" />

		<!--F2键 打开设置界面-->
		<KeyBinding Command="{Binding Key_SetConfig}" Gesture="F2" />
        
		<!--"+" 加号 放大图片-->
		<KeyBinding
            Command="{Binding Key_ScaleFactorChanged}"
            CommandParameter="Add"
            Gesture="Add" />
        
		<!--"-" 减号 缩小图片-->
		<KeyBinding
            Command="{Binding Key_ScaleFactorChanged}"
            CommandParameter="Subtract"
            Gesture="Subtract" />
        
		<!--tab 键 缩小图片-->
		<KeyBinding
            Command="{Binding Key_ScaleFactorChanged}"
            CommandParameter="Tab"
            Gesture="Tab" />
		
        <!--ctrl + v 获取剪贴板数据 (文件/文字)-->
		<KeyBinding Command="{Binding Key_GetClipboardData}" Gesture="Ctrl+V" />
		
    </Window.KeyBindings>

    <Grid Background="#2d2d30">
		<!--右键菜单-->
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Command="{Binding ResetEmulatorOptions_Click}" Header="重置模式选择" />
                <MenuItem Command="{Binding Key_GetClipboardData}" Header="导入图片或数据" />
                <MenuItem Command="{Binding Key_SetConfig}" Header="打开配置" />
                <MenuItem Command="{Binding Key_ColorInfo_Clear}" Header="清空列表" />
                <MenuItem
                    Command="{Binding Key_ScaleFactorChanged}"
                    CommandParameter="Tab"
                    Header="缩放图片" />
            </ContextMenu>
        </Grid.ContextMenu>

		<!--标题栏右键菜单-->
        <Panels:TitleBar VerticalAlignment="Top" PointerPressed="TitleBar_DragMove">
            <Panels:TitleBar.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="最小化" Tapped="Minsize_Tapped" />
                    <MenuItem Header="全屏/还原" Tapped="WindowStateChange_Tapped" />
                    <MenuItem Header="关闭" Tapped="Close_Tapped" />
                </ContextMenu>
            </Panels:TitleBar.ContextMenu>
        </Panels:TitleBar>
		
		<!--左侧工具栏-->
        <Panels:Controls
            Margin="20,50,10,20"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Left" />
		
		<!--中间图片-->
        <Panels:Img
            Margin="{Binding ImgMargin, Mode=TwoWay}"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Left" />
		
		<!--右侧颜色列表-->
        <Panels:ColorInfos
            Margin="10,50,20,20"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Right" />

		<!--鼠标画矩形-->
        <Canvas>
            <Rectangle
                Name="SelectRect"
                Width="{Binding RectWidth, Mode=TwoWay}"
                Height="{Binding RectHeight, Mode=TwoWay}"
                Margin="{Binding RectMargin, Mode=TwoWay}"
                Fill="Transparent"
                Focusable="False"
                IsVisible="{Binding Rect_IsVisible, Mode=TwoWay}"
                Stroke="Red"
                StrokeThickness="2" />
        </Canvas>

		<!--放大镜-->
        <StackPanel
            x:Name="Panel_Loupe"
            Margin="{Binding LoupeMargin, Mode=TwoWay}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsEnabled="False"
            IsVisible="{Binding Loupe_IsVisible, Mode=TwoWay}">
            <Image
                x:Name="Loupe"
                Width="241"
                Height="241"
                Source="{Binding LoupeWriteBmp}"
                Stretch="UniformToFill" />
            <StackPanel
                Width="241"
                Background="#666666"
                Orientation="Horizontal">
				
				<!--x坐标-->
                <TextBlock
                    Margin="5,3,0,8"
                    FontSize="18"
                    Foreground="#bbbbbb">
                    x
                </TextBlock>
                <TextBlock
                    Width="40"
                    Margin="8,8,0,8"
                    FontSize="14"
                    Text="{Binding PointX, Mode=TwoWay}" />
				
				<!--y坐标-->
				<TextBlock
                    Margin="5,3,0,8"
                    FontSize="18"
                    Foreground="#bbbbbb">
                    y
                </TextBlock>
                <TextBlock
                    Width="40"
                    Margin="8,8,0,8"
                    FontSize="14"
                    Text="{Binding PointY, Mode=TwoWay}" />
				
				<!--颜色-->
                <TextBlock
                    Margin="10,3,0,8"
                    FontSize="18"
                    Foreground="#bbbbbb">
                    c
                </TextBlock>
                <TextBlock
                    Width="80"
                    Margin="8,8,0,8"
                    FontSize="14"
                    Text="{Binding PointColor, Mode=TwoWay}" />
				
            </StackPanel>
        </StackPanel>
		
		<!--顶部提示信息-->
        <Border
            Name="HintMessage"
            Width="650"
            Height="45"
            Margin="0,30,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Background="#e8e8e8"
            CornerRadius="5">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="16"
                FontWeight="Normal"
                Foreground="#303030"
                Text="F1清空列表, F2更改配置,方向键微调鼠标, Tab/＋/-缩放图片, Ctrl+V导入图片或数据" />
        </Border>

        <StackPanel
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal">
			
			<!--设置按钮-->
            <Button
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                Command="{Binding Key_SetConfig}">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/settings.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#ffffff" />
                    </Style>
                </Button.Styles>
            </Button>
			
			<!--关于按钮-->
            <Button
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                Tapped="Info_Tapped">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/info.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#ffffff" />
                    </Style>
                </Button.Styles>
            </Button>
			
			<!--最小化按钮-->
            <Button
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                Tapped="Minsize_Tapped">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/minsize.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#ffffff" />
                    </Style>
                </Button.Styles>
            </Button>
			
			<!--还原按钮-->
            <Button
                x:Name="Default_btn"
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                IsVisible="False"
                Tapped="WindowStateChange_Tapped">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/default.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#ffffff" />
                    </Style>
                </Button.Styles>
            </Button>
			
			<!--全屏按钮-->
            <Button
                x:Name="FullScreen_btn"
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                Tapped="WindowStateChange_Tapped">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/fullscreen.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#ffffff" />
                    </Style>
                </Button.Styles>
            </Button>
			
			<!--关闭按钮-->
            <Button
                Width="46"
                Height="30"
                Padding="15,0,15,0"
                VerticalAlignment="Center"
                Background="Transparent"
                CornerRadius="0"
                Tapped="Close_Tapped">
                <Image
                    Width="16"
                    Height="16"
                    VerticalAlignment="Center">
                    <Image.Source>
                        <svg:SvgImage Source="/assets/close.svg" />
                    </Image.Source>
                </Image>
                <Button.Styles>
                    <Style Selector="Button /template/ ContentPresenter">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                    <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Background" Value="#bfe81123" />
                    </Style>
                </Button.Styles>
            </Button>
        </StackPanel>

    </Grid>

</Window>

